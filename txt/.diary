##
# Programmer's Diary of interesting commands and things learned
#
# Author:       Matthew Kneiser
# Date Created: 11/04/2014

#
# Whiteboard Pre-11/04/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
git log -S<string>                      # git pickaxe
                                        # 12/03/21:
                                        # https://gist.github.com
                                        #  /phil-blain
                                        #  /2a1cf81a0030001d33158e44a35ceda6
tput bel                                # makes system ding, good for chaining
                                        #  with long-running commands so they
                                        #  notify you on completion
find ./ -type f -exec sed -i -e 's///g' {} \;
                                        # Note the necessity of the trailing
                                        #  backslash.
grep --colors=always                    # colorize matches
grep -H                                 # alias for --with-filename,
                                        #  defaults to true for multifile
grep -h                                 # alias for --no-filename
:tabnew                                 # vim command for creating tabs
gt                                      # switch between vim tabs
g                                       # goto BOF in `less'
G                                       # goto EOF in `less'
:%s/\s\+$//                             # Removes all trailing whitespace in
                                        #  vim. Last two slashes are optional
M-x toggle-truncate-lines               # Emacs
M-x delete-trailing-whitespace          # Emacs
C-j                                     # Emacs for <enter> + <tab>
C-x z                                   # Emacs for repeat last command


#
# 11/04/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
gd <branch> <branch>                    # diff branches
gd <branch> <branch> <file>             # diff file between branches
gd --name-only <branch> <branch>
gd --name-status <branch> <branch>
gbl -L <line>,<line> <file>
gr --soft HEAD~1                        # rollback commit, changes unstaged
                                        #  convenient for diff'ing changes
gr [--mixed] HEAD~1                     # rollback commit, changes staged
gc --track <remote_branch>              # checkout remote branch
C-x ^                                   # Emacs for increase buffer vertically
M-x shell                               # Emacs terminal that you can C-x o with
M-x term                                # Emacs fully-functional bash. Remember
                                        #  to "exit" to close the process.
M-x dired                               # Emacs traverse the file system

#
# 11/05/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
M-x tabify                              # Emacs, converts spaces to tabs
M-x untabify                            # Emacs, converts tabs to spaces
git filter-branch --tree-filter 'rm -f password.txt' -- --all
                                        # Delete a password file from git history
git branch -d <branch>                  # Try this first, will likely error
git branch -D <branch>                  # Delete a git branch
grep -Iirsl "map_name\[" dir/subdir/ |
     xargs -I{} sed -i "s/map_name\[/new_map_name\[map_key\]\[/g" {}
                                        # find/replace in-place in a dir
git rev-parse --abbrev-ref HEAD         # this is the most portable way to get a
                        # git branch name for automation
git symbolic-ref --short HEAD           # this method doesn't work < 1.8.x

#
# 11/06/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
git diff -b                             # Ignores whitespace in the diff
git diff -R                             # Reverse the diff, shows whitespace well
egrep -Iirsl ".+ +$" . | xargs -I{} sed -i 's/[ \t]*$//' {}
                                        # Remove all trailing spaces from the dir
                                        #  Need to work on the sed part because
                                        #  it matches lines without ^.+ whereas
                                        #  the grep does not

#
# 11/19/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
C-x C-p                                 # Emacs, select all in buffer
M-;                                     # Emacs, comment/uncomment region
C-j                                     # Emacs, <Enter> + <Tab>
C-g C-_                                 # Emacs, Undo
G/gg                                    # Less, EOF/BOF
cat `which body` = sed -n $1,$2p $3
sed '$d' <file>                         # Removes last line of file (prints to
                                        #  stdout obvi)

#
# 11/24/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
y                                       # Less, scroll backward 1
<ENTER>                                 # Less, scroll forward 1

d                                       # Less, scroll forward half-page
u                                       # Less, scroll backward half-page

<SPACE>                                 # Less, scroll forward one page
b                                       # Less, scroll backward one page

#
# 12/01/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
${PWD##*/}                              # Current working dirname in bash
                                        #  concept known as "parameter expansion"
git rev-parse --is-inside-work-tree
git rev-parse --is-inside-git-dir
git rev-parse --git-dir
git rev-parse --show-prefix
git rev-parse --show-cdup

#
# 12/04/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
C-s C-w                                 # Hightlight rest of current word
                                        #  follow with Ctrl-s to search for word
trap 'func_name or command_name' SIG    # Trap signals in a bash script and call
                                        #  the handler. EXIT can be used for SIG
                                        #  if you want something called on exit.

#
# 12/05/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
complete -o default -W "$()" ssh scp    # Use this command to inform bash's
                                        #  auto-complete for 2 cmds for example.
${@: -1}                                # Last argument to a bash script
${!#}                                   # Same as previous
${#@}                                   # TODO: Figure out which is more portable

#
# 12/10/2014
#
Command                                 Comments
---------------------------------------------------------------------------------
git add -p/--patch                      # Interactively add chunks of file to git

#
# 01/05/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
awk should be used for validating a file against a regex, not sed or grep
Add -Is to the grep in the pre-commit hook. What if a file got deleted in the
commit?

#
# 01/12/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
Emacs rectangles...
C-x r t                                 # Emacs, edit multiple lines at once
                                        # http://stackoverflow.com
                                        #  /questions
                                        #  /761706
                                        #  /in-emacs-edit-multiple-lines-at-once
M-x delete-whitespace-rectangle         # Deletes leading whitespace of region?

#
# 01/14/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
tail -f -n +0 <file>                    # Continuously tail a file from the
                                        #  beginning

#
# 01/15/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
:                                       # No-op in bash
echo -e "\a"                            # Make audible bell, same as tput bel

                                        # --Emacs--
C-x C-x                                 # Swap point & mark when selecting
C-x C-u                                 # Uppercase region
C-x C-l                                 # Lowercase region
C-w                                     # Kill region
M-w                                     # Copy region
M-u                                     # Uppercase next word
M-l                                     # Lowercase next word
M-c                                     # Capitalize next word
M-x check-parens                        # Checks for unmatched parens or brackets

                                        # Following commands DO NOT WORK in
                                        #  python's major mode
C-M-f                                   # Jump to closing paren/brace
C-M-b                                   # Jump to opening paren/brace
M-r                                     # Jump to beginning of middle line of
                                        #  current screen

#
# 01/16/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
diff <(git show <sha1>) <(git diff -R)  # the <() creates a temp named pipe
dir <(git status -s)                    # Shows the trickery behind the <()

#
# 01/19/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
2>&1                                    # Must follow a file redirection yet must
                                        #  precede a pipe.

#
# 01/21/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
Emacs, tabs aren't showing with (setq whitespace-style...)
^^Likely because emacs should be inserting spaces instead of tab chars

#
# 01/23/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
C-\                                     # Sends SIGQUIT, stronger than SIGINT
less +F <filename>                      # Equivalent to tail -f, but you get to
                                        #  use less's features. Also, press F
                                        #  in less to go to end of latest file.

#
# 01/28/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
mail -s "SUBJECT" -a <attachment> <TO-EMAIL-ADDR>
<BODY>
^D
                                        # Send email from the command line, with
                                        #  attachments too!

#
# 01/29/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
pydoc <python_module>                   # Access python docs from command line
man test                                # Don't have to google bash conditionals


#
# 02/03/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
<<<                                     # Here String
                                        #  Performs brace/tilde/var expansion etc
                                        # http://www.gnu.org
                                        #  /software
                                        #  /bash
                                        #  /manual
                                        #  /bashref.html#Here-Strings

${!varname}                             # Indirect reference
                                        #  Introduced in Bash 2
${#*} -or- ${#@}                        # Number of positional parameters
git gc                                  # Git cleanup, should be run regularly
GIT_TRACE=true <git_commad>             # Shows debug output of what git is doing
logger                                  # Shell interface for syslog

## Experiment ##
$ logger hello world
$ tail -fn +0 /var/log/syslog
...
Feb  3 16:34:33 <hostname> <user>: hello world
...
## End Experiment ##

#
# 02/04/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
sys.exit(main())                        # Great convention for __main__ in python
sys.exit(main(sys.argv[1:]))

#
# 02/09/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
C-t                                     # Flip the two chars behind the cursor
M-t                                     # Flip the two words behind the cursor
                                        #  ^^ These work in Bash and Emacs

#
# 02/12/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
find -iname                             # case-insensitive search

#
# 02/13/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
C-s C-w [C-w..]                         # Keep pressing C-w to highlight more

#
# 02/24/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
(time make) &> $(date +%F__%T | tr '-' '_' | tr ':' '_')
                                        # Send time and make output to a
                                        #  timestamped file

#
# 03/06/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git diff -w | grep diff | awk '{print $3}' | cut -d'/' -f2-
                                        # Show names of changed files ignoring
                                        #  whitespace changes.

#
# 03/11/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
sed -i.matt '/something/{s/something/newtext/g; w /dev/stdout
> }' filename
                                        # Prints out each replaced word from sed
                                        #  note the newline separating the cmds.
                                        #  http://stackoverflow.com/a/8236897
find . -name "*.matt" -exec rm {} \;    # Remove all accidental sed backup files.
git diff -w | grep diff | awk '{print $3}' | cut -d'/' -f2-
                                        # Names of all files with more than
                                        #  whitespace changes
git diff --name-only --cached           # Names of all staged files

#
# 03/12/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
sed -n 'p;n'                            # Print even lines
sed -n 'n;p'                            # Print odd lines

#
# 03/16/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git rebase -i HEAD~<number of commits to squash>
                                        # git squash. The prompts walk you
                                        #  through everything. Make sure
                                        #  $GIT_EDITOR isn't set to vim.
git branch --set-upstream-to=<upstream_branch_w/o_"remotes"> <local_branch>
                                        # upstream branch name can be found with
                                        #  $ git branch -a
                                        #  from there, remove the word "remotes"
git rebase                              # https://felipec.wordpress.com/2013/09/0
                                        #  1/advanced-git-concepts-the-upstream-t
                                        #  racking-branch/
git show -R                             # Works just like "git diff -R"...
                                        #  reverses the diff output so you can
                                        #  see trimmed whitespaces
git checkout <sha1-commit-id> -- <file_to_checkout>
                                        # Checkout and commit an old version of
                                        #  a file from the history.

#
# 03/17/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
M-m                                     # Emacs, go to first non-whitespace char
                                        #  on current line

#
# 04/01/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git reflog                              # Git git history... (commits, checkouts,
                                        #  etc.)

#
# 04/02/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
C-M-a                                   # Emacs, go to beginning of cur function
C-M-e                                   # Emacs, go to end of current function
grep something_interesting my_file | mail -s "Grep output" email@address.com
                                        # Send output of command as an email
C-s C-s                                 # Emacs, repeat last search
M-e                                     # Emacs I-search, pause search to edit
                                        #  the search string
M-c                                     # Emacs I-search, toggle case-
                                        #  sensitivity
tr -s ' '                               # Squeeze repeats - condenses multiple
                                        #  spaces into one
M-h                                     # Emacs, mark region to closest empty
                                        #  newlines

#
# 04/06/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
(time make) &> $(date +%F__%T | tr '-' '_' | tr ':' '_') && \
echo -e "Finished at: $(date +%F__%T)\n$(pwd)" | \
mail -s "Your build is finished, $USER." <EMAIL>
                                        # Email myself when a build is finished
# on one line:
(time make) &> $(date +%F__%T | tr '-' '_' | tr ':' '_') && echo -e "Finished at: $(date +%F__%T)\n$(pwd)" | mail -s "Your build is finished, $USER." <EMAIL>


(START_TIME=$(date +%F__%T | tr '-' '_' | tr ':' '_'); echo "Start time: $START_TIME"; (time make) &> "$START_TIME"; echo -e "Finished at: $(date +%F__%T)\n$(pwd)/$START_TIME\n$(tail -n 30 $(pwd)/$START_TIME)" | mail -s "Your build has finished, $USER" <EMAIL>)
                                        # Improved build auto-email notification

alias diary="echo 'File attached. This email was sent via a bash alias.' | mail -s \"Your Programmer's Diary\" -a ~/.diary <EMAIL>"
                                        # Email yourself the diary..

#
# 04/14/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git blame --reverse <last_good_commit_id>..HEAD -- <file_name>
                                        # Find a line that was deleted. This
                                        #  will find the last commit with the
                                        #  line in it. You must go to the commit
                                        #  immediately after it to find the
                                        #  offender.

#
# 04/14/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git fetch <repo> <refspec> && git cherry-pick --strategy=recursive -X theirs FETCH_HEAD
                                        # Cherry pick and prefer all the changes
                                        #  from the remote end when merging.

#
# 05/06/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
# 1) Incorporate success/failure in the mail subject line
# 2) Post-build script (only if it exists)
(START_TIME=$(date +%F__%T | tr '-' '_' | tr ':' '_'); echo "Start time: $START_TIME"; (time make; BUILD_RESULT=$? && test $BUILD_RESULT -eq 0 && SUBJECT_LINE="Build SUCCESSFUL, $USER" && test -x ./post_build_script.sh && ./post_build_script.sh) &> "$START_TIME"; test $BUILD_RESULT -ne 0 && SUBJECT_LINE="Build FAILED, $USER"; echo -e "Started at: \t${START_TIME}\nFinished at: \t$(date +%F__%T)\n$(pwd)/${START_TIME}\n$(tail -n 30 $(pwd)/${START_TIME})" | mail -s "$SUBJECT_LINE" <EMAIL>)

# In case it doesn't work:
(START_TIME=$(date +%F__%T | tr '-' '_' | tr ':' '_'); echo "Start time: $START_TIME"; (time make || BUILD_RESULT=$? && test $BUILD_RESULT -eq 0 && test -x ./post_build_script.sh && ./post_build_script.sh) &> "$START_TIME"; echo -e "Started at: \t${START_TIME}\nFinished at: \t$(date +%F__%T)\n$(pwd)/${START_TIME}\n$(tail -n 30 $(pwd)/${START_TIME})" | mail -s "Your build has finished, $USER" <EMAIL>)

# Fix for subshell inheritance issue
(START_TIME=$(date +%F__%T | tr '-' '_' | tr ':' '_'); echo "Start time: $START_TIME"; (time make; BUILD_RESULT=$?; test $BUILD_RESULT -ne 0 && SUBJECT_LINE="Build FAILED, $USER"; test $BUILD_RESULT -eq 0 && SUBJECT_LINE="Build SUCCESSFUL, $USER" && test -x ./post_build_script.sh && ./post_build_script.sh) &> "$START_TIME"; echo -e "Started at: \t${START_TIME}\nFinished at: \t$(date +%F__%T)\n$(pwd)/${START_TIME}\n$(tail -n 30 $(pwd)/${START_TIME})" | mail -s "$SUBJECT_LINE" <EMAIL>

#
# 05/13/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
printf "%0.s-" {1..80} && echo          # Bash, print 80 hyphens

#
# 05/27/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
M-\                                     # Emacs, kill whitespace surrounding pt
                                        #  lets you kill leading whitespace
                                        #  when point is on the first char
set -u                                  # The shell shall write a message to
                                        #  standard error when it tries to expand
                                        #  a variable that is not set and
                                        #  immediately exit. An interactive shell
                                        #  shall not exit.

#
# 06/15/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
nl                                      # Bash, prints out file with line numbers
fold                                    # Bash, wrap contents to N cols

#
# 06/17/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
md5 (GNU/Linux) / md5sum (Unix)         # Run md5 checksum on a file, used to
                                        #  verify downloads from internets

#
# 06/19/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
strings                                 # Finds all the strings in a file
                                        #  Useful on shared libraries (.so) :)
type                                    # Handy. Tells you if alias, installed,
                                        #  etc. $ type type #for more info

#
# 06/22/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
rev                                     # Bash, reverse a line

#
# 06/23/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
find . -not -path '*.git*'              # Find all files in git directory
                                        #  excluding everything under .git

#
# 06/24/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
pip install data_hacks                  # Awesome CLI visualization from Bit.ly
                                        #  https://github.com/bitly/data_hacks

#
# 06/29/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
screen -S build_env -L -d -m ./build_script.sh
                                        # Run build_script inside GNU screen when
                                        #  on an ssh connection to keep it up.
                                        #  Also logs output to a file.

#
# 06/30/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
notify-send "This is a notif."          # A program to send desktop notifications
                                        #  in Ubuntu.
find . -not -path '*/\.*'               # Find all files excluding hidden ones.
C-x h                                   # Emacs, mark-whole-buffer
C-M-\                                   # Emacs, indent-region

#
# 07/01/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
http://cloc.soureforge.net              # SLOC tool that I used for the GUI

#
# 07/02/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git apply                               # Takes the text patches (generate) and
                                        #  applies them to the working tree
git format-patch -1 HEAD --stdout       # Creates a text format of the latest
                                        #  commit
git config commit.cleanup whitespace    # Does a lot of whitespace/newline
                                        #  cleanup for git commit messages
                                        #  git-commit (1) for more. Add --global.
git apply --check fix.patch             # Checks if the patch will work cleanly
git am --signoff < fix.patch            # Same as git-apply but shows who signed
                                        #  of on the patch
git config --local -l                   # List git configs for (system, global,
                                        #  local, file)
set -b                                  # Async notifications of background jobs

#
# 07/08/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
ctags                                   # Dunno yet

#
# 07/09/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
dpkg -S pkg-config                      # Show the install location of a package
                                        #  Useful to determine if a package is
                                        #  installed
man --pager='less -p "getopts optstring"' bash
                                        # Specify options for bash scripts

#
# 07/15/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
find . -name something -exec emacs -nw {} \;
                                        # Open the file that's found in an editor
                                        #  Often it's annoyhing to copy/paste
                                        #  result in a new command to open.
-or-
emacs -nw $(find . -name something )    # Kind of prefer this. Can use alias for
                                        #  editor. But it doesn't work...

#
# 07/16/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
type                                    # Windows equivalent of `cat`
where                                   # Windows equivalent of `which`
:label                                  # Windows create a label useful for loops
goto label                              # Windows how to complete a loop
:: Comment                              # Windows Batch Comment

#
# 07/17/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
exit                                    # How to quit a GNU screen session
screen -r <TAB>                         # Tab completes your available GNU screen
                                        #  sessions
hosts | tr ' ' '\n'                     # Print an array on separate lines in
                                        #  bash. References an alias [host].
'const',
'help',
'option_strings',
'dest',
'required',
'nargs',                                # A list of all the names you can use in
'choices',                              #  Python's argparse in a help message
'prog',                                 #  string formatter
'container',
'type',
'metavar'
GIT_TRACE=1 git init                    # Did not pick up the template - did pick
                                        #  hooks though... Is this a git bug?

#
# 07/20/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git commit --amend --author="Matthew Kneiser <mattman@umich.edu>"
                                        # Change the author on the most recent
                                        #  commit.
git commit --amend --date="$(date -R)"  # Change the date to NOW on the most
                                        #  recent commit.

#
# 07/22/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
sudo update-alternatives --config javac # Update javac version
                                        # From: http://askubuntu.com
                                        #        /questions
                                        #        /117189
                                        #        /apt-get-install-openjdk-7-jdk-doesnt-install-javac-why
{ set +x; } 2>/dev/null                 # Silently turn off bash tracing
echo "STDERR" >&2                       # Write to stderr from script

#
# 07/23/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
$(info text...)                         # GNU Make, print statements
$(warning text...)
$(error text...)

#
# 07/24/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git reset HEAD@{1}                      # Move back one step with Git using
                                        #  the reflog

#
# 07/25/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
gcc -E                                  # Spits out compiler output. Feel free
                                        #  to parse this.
                                        #  http://stackoverflow.com/a/9896895
ctags --version                         # Use Exhuberant Ctags not Original
find . -iname "*.[ch]" -o -iname "*.cc" # Multiple name args to find
find . -iname "*.[ch]" -o -iname "*.cc" | xargs etags -a
                                        # Create a TAGS file for a repo
                                        # Gitignore for TAGS:
                                        #  https://github.com
                                        #   /github
                                        #   /gitignore
                                        #   /blob
                                        #   /master
                                        #   /Global
                                        #   /Tags.gitignore
M-.                                     # Ctags
M-. <tag>                               # Search for a particular tag
C-u M-.                                 # Find the next definition for the last
                                        #  tag
M-*                                     # Pop back to where you previously
                                        #  invoked "M-."

#
# 07/27/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git format-patch --to <EMAIL> HEAD~2..HEAD
                                        # Create emailable patch of the two most
                                        #  recent commits
git send-email *.patch                  # Send patches by email
                                        #  It will prompt you for the TO: field
tar only *safely* works with relative paths. Full paths can be a security risk.

#
# 07/29/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git whatchanged --since="1 day ago" -p  # Great diff output for human-readable
                                        #  time periods.
/etc/bash_completion.d/                 # Great directory containing default
                                        #  auto-completion files for programs
complete -p screen                      # Show the completion function for a
                                        #  given command (in this case `screen`)
ps --pid PID &>/dev/null                # Returns 0 if PID exists, 1 otherwise
git config --list                       # Show all git configs
echo "${PATH:0:1}"                      # Bash, truncate/extract first character
                                        #  in string
complete -r                             # Remove all bash completion functions
complete -p                             # Print out all bash completion functions
git log -C                              # Skips renames when gathering log stats

#
# 08/03/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
cd ./dir; git rev-parse --git-dir       # Running git commands inside a subshell
                                        #  within a git hook is messy.
                                        #  They don't inherit a new env
                                        #  when you cd. Strange! [BUG]
set -e
$(some conditionally failing command 2>/dev/null) || :
                                        # Don't exit script when subshell exits
                                        #  abnormally while set -e is configured.

#
# 08/05/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
!                                       # Emacs, in M-% (find-replace) mode, this
                                        #  replaces all future occurrences

#
# 08/06/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
echo ${some%.proto}                     # Bash parameter expansion. Gets rid of
                                        #  the extension ".proto" from the var

#
# 08/07/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
basename filename.txt .txt              # Trims extension of filename

#
# 08/11/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
sudo update-ca-certificates             # Update your certs
openssl s_client -showcerts -connect <HOST>:443 | tee logfile
openssl x509 -inform PEM -in logfile -text -out certdata
                                        # Get a cert from a host and inspect

#
# 08/13/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git config --get-regexp "^alias\."      # Print out all git aliases

#
# 08/13/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
__VA_ARGS__                             # C++ preprocessor macro, allows for a
                                        #  function to take a variadic number of
                                        #  args
va_arg                                  # C++ macro in <stdarg.h>
"%"PRIdPTR                              # Use in a C++ macro for platform-ind "d"
                                        #  as in "%d"
                                        #  $ man inttypes.h #for more info

#
# 08/18/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
COMPREPLY=( $(compgen ...) )            # Remember the outer parens when calling
                                        #  compgen to generate COMPREPLY items

#
# 08/19/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
fromdos -d windows_file                 # Removes the ^M line endings, dos2unix
                                        #  is aliased to fromdos
                                        # Parameter expansion:
                                        #  http://wiki.bash-hackers.org/syntax/pe

#
# 08/20/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
ls -S                                   # Sort by file size
sed -e 's/ $//'                         # Remove one trailing whitespace

#
# 08/24/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
C-a :flow-off                           # Disable flow control for this GNU
C-a :info                               #  screen window. Confirm with info.
defflow off                             # Does the same as above in .screenrc

#
# 08/26/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
screen -D -R 7992.build_env             # Detach the current session from whoever
                                        #  is logged in or attached. Then attach
                                        #  to it.
M-x tags-apropos                        # Emacs, Tags commands...
M-x list-tags                           #http://www.emacswiki.org/emacs/EmacsTags
M-, (tags-loop-continue)
sudo logrotate cron_rotate.conf         # Rotate a log file based on cmds in
                                        #  that config file.
                                        # It seems to me that you're supposed to
                                        #  call this once per day and it will
                                        #  optionally move the file to a new file
                                        #  you must create a new file to replace
                                        #  the original.

#
# 08/27/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
false                                   # Do nothing, unsuccessfully
set -o pipefail                         # Return value of a pipeline is the
                                        #  rightmost non-zero value or 0

#
# 08/31/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
top -u <USER>                           # Only show processes for one user
diff -q <(git ls-remote origin -h refs/heads/master | awk '{print $1}') \
     <(git rev-parse HEAD) &>/dev/null  # Returns 1 if the remote and local repos
                                        #  are different. 0 otherwise.

#
# 09/04/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
make -qp 2>/dev/null | \
     awk -F':' '/^[a-zA-Z0-9][^$#\/\t=]*:([^=]|$)/ {split($1,A,/ /);for(i in A)print A[i]}' | \
     sort &> sorted_target_list         # List all targets that a makefile
                                        #  generates. Originates from Ubuntu's
                                        #  bash completion for GNU make

#
# 09/08/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git diff --stat HEAD~19..HEAD | head -n -1 | tr -s ' ' | cut -d' ' -f4 | paste -sd+ - | bc
                                        # Initial approach to counting modified
                                        #  lines. Better methods below.
git log --pretty=%H                     # Print all the sha's from a repo's
                                        #  history
git log --pretty=%H | tail -n 2 | head -n 1
                                        # **Assumes first commit was a dump of
                                        #   old code**
                                        # Prints SHA of the second oldest commit
git diff --stat $(git log --pretty=%H | tail -n 2 | head -n 1)..HEAD | head -n -1 | tr -s ' ' | cut -d' ' -f4 | grep -v [[:alpha:]] | paste -sd+ - | bc
                                        # Print number of modified lines in
                                        #  history except for first commit by
                                        #  adding up all deletions and additions
git diff --stat $(git log --pretty=%H | tail -n 2 | head -n 1)..HEAD | tail -n 1
                                        # A more detailed breakdown of previous
                                        #  exists after the initial git command
                                        #
                                        # ::BEST SUMMARY:: looks like this
                                        #
                                        #  8 files changed, 1657 insertions(+),
                                        #  133 deletions(-)
git diff --stat $(git log --pretty=%H | tail -n 2 | head -n 1)..HEAD -- FILENAME.c

#
# 09/22/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
jar tvf jarfile.jar                     # List classes in a Java jar file

#
# 09/25/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
d                                       # Emacs Buffer List Mode, mark for delete
x                                       # Execute all actions like 'd' above

#
# 10/01/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
isearch-forward-regexp                  # Emacs, forward search regexp C-M-s

#
# 10/20/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git archive --remote=git@<HOST>:<ORG>/<REPO>.git \
    REVISION:path/to/file.c | tar -x > file.c
                                        # Grab one file from a git repo

#
# 10/23/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git push origin :branch_name            # Git, delete a remote branch


#
# 10/27/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git show REVISION:path/to/file          # Git, show full file at revision (HEAD)

#
# 11/03/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git tag -a "v1.00.4" -m "Stable build"  # Create a full git tag
git describe --tags --abbrev=0          # Show most recent annotated git tag,
                                        #  exits 1 otherwise

#
# 11/05/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
sdiff                                   # side-by-side merge of file differences
                                        #  easier alternative to diff

#
# 11/16/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
(C Course w/Rob Landley)
lwn.net                                 # Plougher
git annotate ${VERSION}^1 -- filename   # Git annotate one commit before given
                                        #  commit

#
# 11/23/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
mm -B                                   # AOSP Build System, Unconditionally
                                        #  make all targets. Clean/Re-build

#
# 12/09/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
head -n -4                              # Print all but the last 4 lines
sed \$d                                 # Print all but the last line
tail -n +4                              # Print all but the first 4 lines
watch -n1 -d prebuilts/misc/linux-x86/ccache/ccache -s
                                        # Watch CCache being used for the AOSP
                                        #  build (http://source.android.com
                                        #  /source/building.html)

#
# 12/15/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
adb shell wm size                       # Get screen dimensions from cmd line
adb shell input keyevent 26 & adb shell input swipe 400 1900 500 1000 300
                                        # Unlock screen from windows cmd line
                                        #  This was for a 1600x2560 screen
adb reboot bootloader                   # Force UE into fastboot mode
Settings->Developer Options->Pointer Location
                                        # Show user taps/swipes XY coords
${some_var// /\\ }                      # Bash escape all spaces in var
${some_var//\//\\}                      # Forward to back slashes

#
# 12/16/2015
#
Command                                 Comments
---------------------------------------------------------------------------------
git log -1 --pretty=%B                  # Print latest git commit message

#
# 01/04/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
diff -r /some/dir /another/dir          # Compare two directories
man utimes                              # System call that changes access and
                                        # modification times of the inode

#
# 01/11/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
for i in `seq 8`; do name=$(echo "108+$i" | bc); ./compile.sh 2>&1 \
    | tee "matts_last_hope.$name"; done # Runs the same command a few times and
                                        #  logs output to a new filename
sed -i "s/automake .autoconf/& .libtool/" vlc/extras/tools/tools.mak
                                        # '&' refers to full match in a sed sub
dpkg -s autotools-dev                   # Find version of -dev (or any) package
whereis libtool                         # Better version of 'which' for finding!
adb tcpip 555                           # Use adb over wifi w/o a cord
adbconnect <IP>:5555

#
# 01/12/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
date +%Y_%m_%d__%H_%M_%S                # Better date format to use from now on
rm 2016_01_12__16_01_37.!(1)            # Delete all log files except the one
                                        #  matched by the pattern
echo 2016_01_12__16_01_37.!(1) | tr ' ' '\n'
                                        # Test the pattern match in above

#
# 01/19/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
xset [-]led named "Scroll Lock"         # Ubuntu, Toggle keyboard Scroll Lock LED
df -h                                   # Omitting a path shows all partitions

#
# 01/20/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
echo "spellcheck this" | aspell list    # Spellchecker
h                                       # Help when in 'less'

#
# 01/25/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git tag -d <tagname>                    # Delete a tag. Two step process.
git push origin :refs/tags/<tagname>    #  Should alias these two steps.

#
# 01/26/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git commit --amend -C HEAD              # Amend most recent commit, keeping the
                                        #  same commit message

#
# 01/27/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
gnome-open file.pdf                     # Gnome will invoke default program

#
# 01/27/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
curl -kL https://duckduckgo.com/?q=[1-3] -o "file_#1.html"
                                        # Grab multiple files from a website
tar caf something.tar.gz ./some_dir     # Compress a directory (non-obvious)


#
# 02/03/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git log --pretty=format:%s HEAD~1..HEAD # Get most recent commit message
git log --pretty=oneline <old_tag>..<new_tag>
                                        # Get list of sha's and commit msg's
git whatchanged                         # Don't know what this is yet :)

#
# 02/11/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
./gradlew assemble |& less              # Redirect stderr and stdout to less

#
# 02/16/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
for k in `git branch -r | perl -pe 's/^..(.*?)( ->.*)?$/\1/'`; do echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k -- | head -n 1`\\t$k; done | sort -r
                                        # Show sorted list of branches and last
                                        #  commits on each one, colored too
                                        #  src: https://gist.github.com/
                                        #        jasonrudolph/1810768

#
# 02/18/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git clone ./android-app app-android     # Clone local repo as a new name

#
# 02/26/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
keytool -list -v -keystore $keystore -alias $alias -storepass $storepass
                                        # Inspect keys in a keystore
jarsigner -verify -verbose -certs myapk.apk
                                        # Verify that an apk is signed properly

#
# 03/02/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
curl -C -                               # Curl will automatically continue a
                                        #  download from where it left off
wget -k/--convert-links                 # Wget will rewrite links to point to
                                        #  local files OR remote ones
wget -p                                 # Wget will retrieve all necessary files
                                        #  to view offline
wget --help                             # Much better than 'man wget'

#
# 03/04/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
M-<, M->                                # Bash, jump to first/last cmd
readline customizations                 # In man bash, consider messing with

#
# 03/07/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
aapt dump badging app-debug.apk         # Inspect Manifest properties of apk
find $ANDROID_HOME -name aapt           # Location of aapt tool

#
# 03/08/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
echo ${1%/}                             # Trims one trailing slash from a var
                                        #  http://www.gnu.org
                                        #   /software
                                        #   /bash
                                        #   /manual
                                        #   /bashref.html
                                        #   #Shell-Parameter-Expansion

#
# 03/09/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git checkout --orphan new_branch_name   # Create a branch with no history
sudo apt-get install --only-upgrade firefox
                                        # Only upgrade one package

#
# 03/14/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git rebase -p --onto SHA^ SHA           # Where SHA is the commit SHA you want
                                        #  to nuke from history. Removes a commit
                                        #  from your history.
                                        # http://sethrobertson.github.io
                                        #  /GitFixUm
                                        #  /fixup.html
pandas                                  # Great!! Python lib for data analysis
                                        #  handles csv's well
ipython notebook                        # Web-based python prezzie format

#
# 03/15/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
caller                                  # A builtin and variable that give you
$FUNCNAME                               #  access to the Bash call stack

#
# 03/28/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
                                        ## Emacs
C-x C-v                                 # Find new file if you opened the wrong
                                        #  file. It will replace current buffer
C-x C-x                                 # Swap point and mark. Useful for
                                        #  expanding a highlighted section
C-t                                     # Transpose prev two chars
C-x u/l                                 # Uppercase/lowercase region
M--                                     # *Negative argument*, usually reverses
                                        #  command. Can use it to apply
                                        #  backwards instead of forwards
M-- M-u                                 # Uppercase previous word
C-x s                                   # Save all open buffers, remain in yours
C-x C-q                                 # Toggle read-only mode of a buffer
C-x {/}                                 # Expand window left/right
C-x ^                                   # Expand window taller
[C-u] C-x {/}                           # Expand window in 4 unit intervals
1/2                                     # In 'buffer-menu', pressing these next
                                        #  to a buffer name opens that buffer in
                                        #  that many vertical buffers
describe-function/key                   # Useful help commands
sort-lines                              # Sorts the current region
M-|                                     # 'shell-command-on-region'
[C-u] M-|                               # Put output of command into cur buffer
                                        #  If a region is overwritten, it's not
                                        #  yankable, only undo-able. This is
                                        #  an undocumented feature of Emacs
center-region                           # Center region of text, prettify
kill-rectangle                          # Mark the cursor first, then move it
yank-rectangle                          #  one space past necessary

                                        ## Non-Emacs
git rm -r --cached <file>               # Remove file from git history not tree
C-\                                     # Bash, Send SIGQUIT
stty -a                                 # Bash, see all keyboard shortcuts for
                                        #  signals and other cool stuff

#
# 03/29/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
Ctrl+Windows Key+(Left/Right/Up)        # Unity, snap window to left/right/full
                                        #  screen
C-o                                     # Emacs, within 'buffer-menu' (C-x C-b)
                                        #  opens selected buffer in the other
                                        #  window. Keeps point in 'buffer-menu'
o                                       # Same as previous but moves point to
                                        #  the new window.
q                                       # Exits 'buffer-menu'

#
# 03/30/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
M-SPC                                   # Emacs, 'just-one-space', ensures one
                                        #  space separates two words.

#
# 04/12/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git diff --stat $(git log --pretty=format:%H --after="Feb 29 2016" --before "Apr 1 2016" | tail -1)^..$(git log --pretty=format:%H--after="Feb 29 2016" --before "Apr 1 2016" | head -1)
                                        # Get all commit data for March 2016/SLOC
git log --pretty=format: --name-status | cut -f2- | sort -u
                                        # List all files that ever existed in a
                                        #  git repo
git log master...HEAD                   # Find common ancestor of two branches
                                        #  this finds the most recent ancestor
                                        #  between current branch and master

#
# 04/14/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
${mylist[-1]}                           # Bash, refer to last element in list
identify myimage.jpeg                   # Print image dimensions and other info

#
# 04/15/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
man gitrepository-layout

#
# 04/16/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git apply --exclude=app/src/main/java/something.java --check patch_name
                                        # Ignore a file in a patch, and check to
                                        #  see if it cleanly applies
rev                                     # Bash, reverse a line!!! This is often
                                        #  useful for cutting the last field, but
                                        #  remember to reverse again, since the
                                        #  chars within a string are reversed

#
# 04/18/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git stash list --date=local             # Show stashes by timestamp

#
# 04/19/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
cp -nvrp                                # Did this after a longer-than-expected
                                        #  cp. Verbose, doesn't clobber, etc.
                                        #  Discovered that a lot of tiny files
                                        #  were getting copied over.

#
# 04/26/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
bind -l                                 # List all readline functions
/usr/bin/etags -R                       # Generate TAGS file


#
# 04/28/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
getent passwd $UID                      # Get your default shell

#
# 06/10/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
( set -o posix ; set ) | less           # Print out current environment

#
# 06/17/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
.git/logs                               # This directory contains reflogs. In
                                        #  order to step back into history via
                                        #  reflogs, one has to cp the entire repo
                                        #  not just clone it. Cloning doesn't
                                        #  copy 'local' refs from .git/logs.
                                        # http://stackoverflow.com
                                        #  /questions
                                        #  /16842529
                                        #  /is-there-a-way-in-git-to-push-the-
                                        #   reflog
http://stackoverflow.com/users/1015820/matt-kneiser?tab=votes
                                        # A great proxy for dev activity

#
# 06/27/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
adb shell dumpsys package               # Install/Update times of all apps on
                                        #  the Android device. Grep is friendly.
Windows restricts filepaths to 256 chars

#
# 07/06/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git clean -ndX                          # Dry-run of all the files that are
                                        #  ignored by git.
git clean -fdX                          # Actually delete ignored files
git check-ignore -v <FILE>              # Displays which rule applies to file

#
# 07/07/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
$ git status -s
MM README.md
$ git stash save                        # Notice that by default this stashes the
$ git status -s                         #  staged area as well as unstaged
----
$ git status -s
MM README.md
$ git stash save --keep-index           # Notice that this stashes only the
$ git status -s                         #  unstaged area
M  README.md

#
# 07/08/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
curl -w 'format'
curl -w "@<CURL_FORMAT_FILE>"           # Report stats about successful curl

#
# 07/11/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
paste -sd+ file | bc                    # Bash, sum column of numbers
M-| 'paste -sd+ - | bc'                 # Emacs, sum column of numbers
paste <FILE1> <FILE2>                   # Lines up two files separated by tabs
                                        #  Can also think of it as a join of
                                        #  two tables w/no merge criteria
clang-format -style=WebKit -dump-config # See config file of a built-in style
clang-format -style=file -dump-config   # See .clang-format style config
clang-format -style=<STYLE> <FILE>      # Format a file with clang-format
PenaltyBreakBeforeFirstCallParameter    # Clang-format, penalty parameters were
                                        #  inherited from Latex

#
# 07/11/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git clang-format                        # Not sure what this does, some sort of
                                        #  clang-format integration with Git
"sneakernet"                            # Informal term describing transfer of
                                        #  info by physically moving removable
                                        #  media
git bundle                              # Not entirely sure what this does
~~strikethrough phrase~~                # Markdown syntax for strikethrough

#
# 07/19/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
Windows-<NUMBER>                        # Unity, opens an application from tray
Windows (HOLD)                          # Unity, shows keyboard shortcuts
etags stack                             # Emacs, tool to navigate TAGS history

TODO: Figure out what this did:
git blame --line-porcelain qcril.c | sed -n 's/^author //p' | sort | uniq -c | sort -rn

#
# 07/20/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git diff --name-only --diff-filter=AMCR # Git-diff, only show files that are
                                        #  (A)dded, (M)odified, (C)hanged, or
                                        #  (R)enamed

#
# 07/21/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git show-ref --tags -d | grep <SHA>     # Shows all tags that point to a commit

#
# 07/22/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git log --format=fuller                 # See author and committer
git log --format="%ce" | sort | uniq -c # All email addresses in history
https://help.github.com/articles/changing-author-info/
                                        # Change names in repo
eventvwr.exe                            # Windows, view system log for errors

#
# 07/25/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
C-M-s/C-M-r                             # Emacs, regex search forward/back. Once
                                        #  initiating the search, use normal
                                        #  shortcuts like (C-s) for next result

#
# 07/27/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
echo "${@:2}"                           # Print all arguments except first
                                        #
alias gre="grep -Iirsn"                 # From builtins(7):
alias a="alias"                         #  A trailing space in value causes the
set -x                                  #  next word to be checked for alias
gre a ...                               #  substitution when the alias is
grep -Iirsn alias ...                   #  expanded

#
# 07/31/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
${!arr[@]}                              # Bash, keys of associative array

#
# 08/03/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
man interfaces                          # /etc/network/interfaces description
man run-parts                           # Run all executable scripts in a dir

#
# 08/05/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
C-m                                     # Emacs, RET
C-o                                     # Emacs, open-line, insert newline after
                                        #  point

#
# 08/08/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
insmod/rmmod                            # Insert/Remove module to/from kernel
                                        #
                                        # First day needing to use Emacs recovery
                                        #  for a file that was lost. Navigated
                                        #  backup-directory and found file!

#
# 08/09/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
M-1 C-x $                               # Emacs, Code fold entire file
C-u C-space                             # Emacs, move point back to where it was
                                        #  before an incremental search
C-x C-x                                 # Emacs, same as above, but highlights
                                        #  region

#
# 08/10/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
ediff                                   # Emacs, diff two buffers

#
# 08/11/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
EXPECT_EQ() << "Custom fail message";   # Google Test, custom failure message
ASSERT_STREQ()                          # Google Test, compare C strings
CHAR_BIT                                # CPP, number of bits in a byte on your
                                        #  platform as defined by stdint.h
git unpack-object -t <.git/objects/.../FILE>
                                        # Git, type of object
man gitcore-tutorial                    # Git, great docs on internals
fail2ban                                # Protect your mail server

#
# 08/13/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git hash-object                         # Compute object ID or create blob from
                                        #  a file
list-packages                           # Emacs, list all packages from sources
eval contents_of_var="\$${var}"         # Bash, get contents of a variable that
                                        #  you only have the name of

#
# 08/16/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
linum-mode                              # Emacs, show line numbers in margin
C-i                                     # Emacs, indent-for-tab

#
# 08/19/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
replace-regexp m_\([0-9]\) -> h_\1      # Emacs, replace m_4 -> h_4
                                        #  Basically, \1 backrefers to a match
                                        #  group.
                                        # According to https://www.gnu.org
                                        #               /software
                                        #               /emacs
                                        #               /tour
\&                                      # Emacs, the original found text
\1, \2, \3, etc.                        # Emacs, the 1/2/3rd parenthesized
                                        #  subgroup in search/replace
\#                                      # Emacs, number of replacements so far
\?                                      # Emacs, string given by user on match
\,(lisp-expression)                     # Emacs, result of evaluating expression
C-s M-n                                 # Emacs, next item in search history
C-s M-p                                 # Emacs, prev item in search history

#
# 08/23/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
locate                                  # Still figuring this command out
strings /usr/lib/libstdc++.so.6 | grep GLIBC
                                        # Find versions of GLIBC that libstdc++
                                        #  is compiled against
man ld.so                               # Found from "strace git push origin"
C-c ! l                                 # Emacs flycheck, list all errors
https://github.com/koalaman/shellcheck/wiki/SC<ERROR_ID>
                                        # Flycheck error description
S                                       # Emacs flycheck, Sort on active column

TODO: inquire status of set -x??? Can there be an alias s="set --" do the opposite of what's there? set -x or set +x??

#
# 08/25/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
headed vs. headless                     # Terminology, with/without display/gfx

#
# 08/29/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
flake8                                  # linters
checkdoc

#
# 08/30/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON <DIR>
                                        # CMake, create compile_commands.json
clang-tidy -p . <FILE_TO_COMPILE>

#
# 09/07/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
echo 1 | od -to2 | head -n1 | cut -d' ' -f2 | cut -c6
                                        # Ubuntu, endianness check.
                                        #  1 = little endian
                                        #  0 = big endian
readelf                                 # Display contents about ELF exe's
objdump -af                             # View object information about a static
                                        #  lib
nm -g <LIB>.so                          # Print symbols (like functions) of a .so
readelf -Ws <LIB>.so                    # Print symbols (like functions) of a .so
/sbin/ldconfig -p | grep <LIB>          # Check what libraries linker knows to use

#
# 09/09/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
man -K [--regex] "<SEARCH_TERM>"        # Search all man pages for a term

#
# 09/13/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
M-.                                     # Bash, grab last argument to prev cmd
emacs !$                                # Bash, same as above, bash expands !$
!!:p
!$:p                                    # Bash, print the evaluation of variable
rm -I/-i                                # Investigate which one can help avoid
                                        #  mistakes TODO
magic-space                             # Bash, history expansion, TODO
C-p/C-n                                 # Bash, history back/forth
.inputrc                                # Best place to put readline bindings
                                        #  so they're read by more than just
                                        #  bash, including python, mysql, etc
                                        #  TODO

#
# 09/21/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
lsmod                                   # View modules loaded by kernel
                                        #  used when debugging USB camera on 410c
ls /dev/video*                          # View all the video devices
dmesg | grep -i video

#
# 09/30/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
nmcli                                   # Network manager on Linux, use it to
                                        #  query or operate on wifi/wired
                                        #  connections

#
# 10/05/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
ctrlaltdel

#
# 10/06/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
find . -name "*.cpp" -print -or -name "*.h" -print | xargs etags --append
nanosleep

#
# 10/10/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
Ctrl+-                                  # Microsoft Excel, delete hilighted cell

#
# 10/20/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
head -c 10 file.binary                  # Print first few bytes of file, useful
                                        #  for binary files when no line breaks
                                        #  expected

#
# 10/24/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
lspci                                   # Show all PCI devices
modinfo                                 # Show more info about a kernel driver

#
# 11/01/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
git fetch --tags
/etc/rc.local                           # Startup script on Debian/Ubuntu

#
# 11/04/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
nl -s prefix file.txt | cut -c7-        # Adds "prefix" to every line of file
sort --version-sort -f                  # Sorts numbers when they're not
                                        #  preceeded by a 0, i.e. zero-filled
#
# 11/08/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
convert source.jpg -colorspace Gray dest.jpg
                                        # Convert color jpeg into grayscale
awk -F ':' '$4 >= 1 && $4 <= 10{print $1}'

#
# 11/14/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
setserial -g /dev/ttyS[0123]            # List all serial ports and their info

#
# 11/16/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
dpkg -l                                 # List all packages installed on machine


#
# 12/16/2016
#
Command                                 Comments
---------------------------------------------------------------------------------
find . -type f | awk -F. '!a[$NF]++{print $NF}'
                                        # Print all file extensions in a
                                        #  directory
sudo dpkg -L python-opencv              # Location of package files

#
# 01/12/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
rsync -avz my_dir user@host:/my_dir     # Pickup where scp left off, make sure
                                        #  to specify my_dir explicitly on the
                                        #  remote
package-activated-list                  # Emacs, variable that contains all
                                        #  installed packages
grep -oE "[^e]{1}alloc_buf\([^,]*," .   # Using more complex grep syntax

#
# 01/26/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
Ctrl-Alt-Pause/Break                    # Windows, toggle full-screen for rdp
g                                       # Emacs dired, update the list
M-p,M-n                                 # Emacs isearch, prev/next search terms
j,k,l                                   # Youtube, back 10s, pause, fwd 10s

#
# 01/27/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
rename                                  # Rename many files in bash
${@:1:-1}                               # Bash, everything except last item


#
# 02/03/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
sed 's/\"/\\\"/g' | sed "s/'/\\\'/g" | xargs
                                        # Escape ' and " in filenames

#
# 02/10/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
sudo iotop -a -u USER                   # Show accumulated IO ops for a user

#
# 02/17/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
grep -B 1 "(" source.h | grep -A 1 '\-\-' | grep -v '\-\-'
                                        # Print only Nth line before/after match
sed 's/^ *//'                           # Remove all leading whitespace

#
# 02/28/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
TRIM                                    # Excel, removes leading/trailing space

#
# 03/07/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
awk 'NR % 4 == 1'                       # Print nth line
declare -c var_name                     # Undocumented, capitalizes variable

#
# 03/08/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
grep -m 1 "<html>"                      # Grep, stop after first match

#
# 03/22/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
echo "${var[@]/%/_append}"              # Append something to every string in arr
echo "${var[@]/#/prepend_}"             # Prepend somethin to every string in arr
https://web.archive.org/web/20101114051536/
    http://codesnippets.joyent.com/posts/show/1826
comm                                    # Compare two sorted files, haven't used

#
# 03/24/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
wget --spider http://...                # Get filesize before downloading

#
# 04/05/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
clang-tidy -dump-config -checks=*       # Dump all current configs, helps build
                                        #  a .clang-tidy file
clang-tidy -fix -checks=readability-identifier-naming src/main/main.cpp
                                        # Run a check and force fixes to be made
M-% " " C-q C-j                         # Emacs, find-replace space with newline

#
# 04/07/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
sudo lshw -class disk                   # List all hard drives on linux system
https://github.com/mbrubeck/android-completion.git # Add "sdk avd" to android

#
# 05/02/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
sed -n '/my_pattern/ ='                 # Print line of every line that matches
                                        # TODO: Git merge stuff...
git checkout --theirs -- file           # During merge, choose "their" version
                                        #  this is flipped during rebase, so
                                        #  that ours is the mainline and theirs
                                        #  is the feature branch
git merge -s recursive -Xtheirs feature # Fast-forward all files until a conflict
                                        #  then, merge chunks in files. When two
                                        #  chunks conflict, prefer theirs
Ctrl-Alt-End                            # Windows, remote desktop, bring up the
                                        #  Ctrl-Alt-Del menu options

#
# 05/04/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
aaaaa^..HEAD                            # Git, inclusive range of commits

#
# 05/12/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
"Bash lets you glue best-of-breed tools together, as long as they all talk on
stdin / stdout / files. The tools themselves can be written in the best language
for their task."                        # https://news.ycombinator.com
                                        #  /item?id=14321213
nm -g mylib.lib                         # Prints out all external references
nm -aC mylib.lib                        # Prints out unmangled CPP names from
                                        #  a library

#
# 05/17/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
nm -aCS --size-sort foobar.lib | cut -d' ' -f3 | sort | uniq -c | grep -v "\.o"
                                        # Get all the different types of symbols
                                        #  in lib
nm -CgS --size-sort foobar.lib > lib_external
cut -d' ' -f4 lib_external | sed '/^\s*$/d' | grep -v "\.o" | \
    sort | uniq -c | sort
                                        # Get all external symbol names
sort -nk 2 mylist.csv                   # Sort based on second field
size -t foobar.lib                      # Shows size of different sections
                                        #  (data/text, etc.)
find . -type f -name '*.lib' | xargs -I{} \
     sh -c "echo -n '{} ' && size -t {} 2>/dev/null | tail -n 1"
                                        # Find sizes of all code sections of all
                                        #  libs in current dirs

#
# 05/18/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
inotifywait -mr . --format "%e | %w"    # Print out all files touched in a dir

#
# 05/31/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
tar caf my.tar.gz --remove-files file1  # Compress file1 into archive and remove
                                        #  the uncompressed original file1.
                                        #  Used for backups.

#
# 06/02/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
git commit -m 'First line' -m 'Next'    # Multi-line commit messages that conform
                                        #  to commit standards. 'Next' shows up
                                        #  with a newline in between
find . \( -path ../stubs -o -path ../inc \) -prune \
     -type f -name "*.c" -o -name "*.cc" \
     -o -name "*.cpp" -o -name "*.h"    # Exclude multiple paths from find
git diff-index --quiet --cached HEAD    # Repo has staged changes
git diff-files --quiet                  # Working tree has changes
git diff-index --quiet HEAD             # Checks for both of above
history -a                              # Append current commands to history
history -c
history -r

#
# 06/07/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
git status
M  my/file
 M my/other
git stash save "message"                # Dangerous behavior
git stash show stash@{0}                # Doesn't show staged changes
git stash apply --index                 # Reverts stash
git status
M  my/file
 M my/other

#
# 06/11/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
for i in $(grep -Irs "^#include " mysrc.cpp | cut -d' ' -f2 | tr -d '"'); do
    (find mydir -name mysrch_$i | grep -q ".") && echo " mysrch_${i}";
done                                    # Find all headers in dir

#
# 06/13/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
wget https://raw.githubusercontent.com/llvm-mirror/clang/master/tools/clang-format/{clang-format.py,clang-format.el}
                                        # Brace Expansion from man bash
clang-tidy -dump-config -checks=-*,readability-identifier-naming
           | grep readability | awk '{print $3}'
           | cut -d'.' -f2
           | sed 's/Prefix//'
           | sed 's/Suffix//'
           | sed 's/Case//'
           | sort | uniq

#
# 06/14/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
https://github.com/emacs-mirror/emacs/blob/emacs-25/lisp/emacs-lisp/copyright.el
                                        # Emacs file for updating copyright
                                        #  Similar to my copyright hook!
https://www.gnu.org/software/emacs/manual/html_node/elisp/Saving-Buffers.html#Saving-Buffers
                                        # Lots of inspiration here for mature
                                        #  software process

#
# 06/19/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
man terminfo
less --RAW-CONTROL-CHARS                # Will show raw color codes


#
# 06/27/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
alt+shift+<arrow>                       # Visual Studio, multiple cursors
ctrl+<arrow>                            # Visual Studio, Scroll window

#
# 06/28/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
diff --width=180 -y file.h <(sed -e '/EDIT HISTORY/,/\*\//{//!d}' file.h ) \
     | head -n 50                       # Testing the removal of EDIT HISTORY
                                        # TODO: remove any empty /*= */ blocks
                                        #  before first #include
diff -W 180 -y <(sed -e 's/\s\+/\n/g' my_c) <(sed -e 's/\s\+/\n/g' my_d) | less
                                        # Comparing compile commands in 2 files

#
# 06/30/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
Shift-F8                                # Source Insight, un/highlight word

#
# 07/06/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
sed -e 's/\s\+/\n/g' compile_command    # Replace spaces with newlines


#
# 07/14/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
M-x scroll-all-mode                     # Emacs, scroll 2 buffers same time
                                        #  good for diffs

#
# 08/03/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
Trying to find the syslog command on ubuntu I used for the 410c...
journalctl -p 8??

#
# 08/09/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
GIT_COMMITTER_DATE="Wed Aug 9 14:42:27 2017 -0700" git commit \
                        --date="Wed Aug 9 14:42:27 2017 -0700" -m 'Fixing bug'
                                        # Git, change date when committing

#
# 08/24/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
bison -v grammar.y                      # Spits out ".output" file with very
                                        #  helpful info that describes your
                                        #  grammar, shows unused tokens, etc
less -N                                 # Line numbers


#
# 11/14/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
awk '{print substr($0,OFFSET,LENGTH)}'  # Print second half of output from offset

#
# 11/14/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
https://www.training.nih.gov/assets/Lab_Notebook_508_(new).pdf

#
# 12/11/2017
#
Command                                 Comments
---------------------------------------------------------------------------------
git push origin <HASH>:<BRANCH>         # Git, push up to and including a commit

#
# 01/11/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git log --pretty="format:%<(20,trunc)%an|%<(60,trunc)%s" SOME_TAG..HEAD
                                        # Git, pad fields in pretty format

#
# 01/24/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
comm -12 file1 file2                    # Print lines present in both files

#
# 01/26/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
M-x linum-mode                          # Emacs, line number

#
# 03/07/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
https://gist.github.com/amitchhajer/4461043 # Count number of code lines in git
                                            # repo per user

#
# 03/08/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git checkout --ours <path>              # Git rebase, chooses HEAD version

#
# 03/14/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git merge-base branch1 branch2          # Git, most recent common ancestor

#
# 03/21/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
while read f; do \
      size -t $f | tail -n 1; \
done < rf_mem_usage.txt \
2>&1 >&3 3>&- 1>/dev/null | wc -l       # Bash, redirect only stderr to pipe
                                        # Still wrapping my mind around this one
seq -w 15                               # Bash, pads all numbers to equal length
http://www.tldp.org/LDP/abs/html/io-redirection.html

#
# 03/22/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
http://theory.stanford.edu/~aiken/moss/ # Anti-plagiarism tool

#
# 03/23/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git rm --cached -r .                    # Git, when a file stubbornly doesn't get
git reset --hard                        #  discarded by git checkout
for i in $(git diff --name-only); do sha=$(
git log -n 1 --pretty=format:%H -- "$i"); printf "%s: %s\n" "${sha}" "${i}"; done
                                        # Show last modified SHA of every file
                                        #  that's modified
git checkout --theirs <path>            # Git rebase, recipe for resolving
git add <path>                          #  conflicts. This can happen when a
git rebase --continue                   #  change is made back&forth on a branch
                                        #  Cleanup/squashing branch prevents this
<line number> <enter>                   # Less, go to line number (top of screen)

#
# 03/29/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
ctags -x --c++-kinds=fp <file.h>        # List all function decl and impl's in
                                        #  a header
find ./api | while read f; do
      ctags -x --c++-kinds=fp $f;
done | awk '{print $1}' | sort | uniq

#
# 04/25/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git log --pretty=short -u -L 679,679:full_path_from_base_of_git_dir
                                        # Git, history of one-line

#
# 05/30/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
find . -type f -name '*.scons' \
     | while read r; do grep -HnIrs "TODO" $r \
     | cut -d':' -f1,2 | tr ':' ' ' \
     | while read f g; do sed -i -e "$g"'d' $f; done; done
                                        # Delete all lines with TODO in them

#
# 06/11/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
c++filt                                 # Unmangle C++ symbols from compiler

#
# 06/21/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git update-index --assume-unchanged f   # Untrack tracked file
git ls-files -v | grep '^[[:lower:]]'   # List all files marked --assume-unchngd

#
# 07/09/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
grep "^#include \"header.h" .           # Insert prefix onto header in many files
     | head -n 5
     | xargs -I{} sed -i 's/\(header\)/prefix_\1/' {}

#
# 08/14/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
awk '/^{/{l=0} /} [[:alnum:]_]+;/{p=$2; a[p]=l} {l++} END{for(i in a) print i a[i]-1}' structs.h
    | grep intf
    | cut -d';' -f2
    | awk '{ sum += $0 } END { if (NR > 0) print sum / NR }'
                                        # Average number of members in structs
                                        #  when '{' is on a bare line followed by
                                        #  '} struct_name;' on another

#
# 09/06/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
man gitrevisions

#
# 10/17/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
cat /proc/<pid>/stack                   # Show stacktrace of running process

#
# 10/25/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
sudo dmidecode -q | grep Z              # Get hardware info (i.e. HP Z2x0)

#
# 11/05/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
awk '($4 != $5) && ($1 != substr($5, 0, 1)) && ($1 == substr($4, 0, 1))' office.csv
                                        # Awk, Data mining CSV file

#
# 11/06/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
https://arxiv.org/pdf/1603.07285.pdf    # Deep Learning, CNNs, Convolution basics
${output/ /_}                           # Bash, Replace first space with under
${output// /_}                          # Bash, Replace all spaces with unders
awk '($2 == substr($3, 0, 1)) && ($5~"Matt_*")' file.csv
                                        # Awk, pattern match on variable

#
# 11/20/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
https://github.com/green7ea/cpp-compilation/blob/master/README.md
gcc -H                                  # Print the name of each header file used

#
# 11/30/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
${var%%-*} # hello-world-today          # Bash substitution, Prints "hello"
${var##*-} # hello-world-today          # Bash substitution, Prints "today"

#
# 12/04/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
sed "s/[!@#$%^&*()-]/\\\&/g"            # Escape all special chars

#
# 12/07/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
find . -printf "%a\n"                   # Formatted output from find for things
                                        #  file access times, size, group, etc

#
# 12/10/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
http://www.gnu.org/prep/standards/html_node/Option-Table.html#Option-Table
                                        # Helpful list of options used in GNUtils
${var//\//\\/}                          # Substitution, escape a file path

#
# 12/12/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
commitizen                              # The concept of someone who takes care
                                        #  to write helpful, instructive, and
                                        #  well-formed commit messages
https://github.com/commitizen/cz-cli
https://github.com/marionebl/commitlint

#
# 12/14/2018
#
Command                                 Comments
---------------------------------------------------------------------------------
git blame HEAD <file>                   # Disregard "Not Committed Yet" changes
ls -H                                   # Follow symlinks
find /sdfksd/sdflks -printf '%P\n'      # Find, remove starting-point from output

#
# 01/10/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
${var:-10}                              # Bash, default variable to value of 10

#
# 01/15/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
cat <<EOT >$tmpfile                     # Heredoc, here document
blahblah
EOT
grep -crPn "[\x00-\x08\x0E-\x1F\x80-\xFF]" . # Grep, find non-ASCII characters
find . | perl -ne 'print if /[^[:ascii:]]/' # Find any filenames in w/non-ASCII

#
# 01/17/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
grep -IscH "something\/[^s]" ./* | sort -nk 2 -t ':' # Sort by counts in grep
     | awk -F':' '{ if ($2 > 0) print $0 }' # Filter by values in 2nd col >0
dpkg --get-selections                   # CMake, env output
env                                     # CMake, env output
lsb_release -irc                        # CMake, env output
uname -a                                # CMake, env output
alias                                   # CMake, env output

#
# 02/05/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
https://review.xx.com/#/c/1234/2  # Gerrit link, use this to pull changes
git ls-remote | grep 1234               # Gerrit, find SHA for commit
 <SHA>  refs/changes/34/1234
git fetch origin refs/changes/34/1234/2 # Gerrit, fetch a review
git checkout/cherry-pick <SHA>

#
# 02/14/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
objdump -x blahblah.so                  # Great formatting of Symbol Tables

#
# 02/15/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
ldd /lib/x86_64-linux-gnu/libm.so.6     # Show dependencies of a shared lib
                                        #  used for dynamic linking
objdump -p | grep NEEDED                # Safe alternative for untrusted exe's
gcc -Wl,-t simple.c                     # Trace of files processed by linker
gcc -Wl,-y,sin simple.c                 # Print the name of every file in which
                                        #  the symbol "sin" appears
gcc -Wl,-M simple.c                     # Print a link map used for linker

#
# 02/19/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
git ls-files --others --exclude-standard# List all untracked files

#
# 02/25/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
git-notes                               # Explore adding these beyond a commit
gd -U(wc -l file |) $(commit-before)...commit # full context diff TODO

#
# 11/27/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
g                                       # Emacs dired, refresh buffer
https://gist.githubusercontent.com/mlocati/fdabcaeb8071d5c75a2d51712db24011/raw/b710612d6320df7e146508094e84b92b34c77d48/win10colors.cmd
                                        # Win Cmd Prompt, colorized output seqs

#
# 12/01/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
rm -P                                   # secure delete, 3x overwrite did this
                                        #  to SD card before disposal
sudo apt-get -s autoremove              # apt-get dry run
sudo apt-get autoremove                 # apt-get, useful to run after upgrade
sudo apt-get --with-new-pkgs upgrade    # apt-get, installs new pkgs instead
                                        # of leaving them behind
sudo apt-get install --only-upgrade bash# apt-get, upgrade only one pkg
/var/log/apt/history.log                # apt-get, log of all pkg operations
WebDAV                                  # "Web Distributed Authoring and
                                        #  Versioning" is an HTTP extension that
                                        #  makes it easy to create, read, and
                                        #  edit files on Web servers
                                        # https://doc.owncloud.com/server
                                        #  /user_manual/files/access_webdav.html

#
# 12/02/2019
#
Command                                 Comments
---------------------------------------------------------------------------------
xcopy /E                                # cmd equivalent of "cp -r"
C-/                                     # Emacs, undo w/less keystrokes than C-_

#
# 01/19/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
d -> down                               # Less, visual jumping
u -> up                                 # Less, visual jumping
less -j .5                              # Less, search result shows up in middle
                                        #  of screen, not bottom/top

#
# 01/20/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
shrink-window-if-larger-than-buffer     # Emacs, does as expected
                                        # More info: https://stackoverflow.com
                                        #  /questions
                                        #  /4987760
                                        #  /how-to-change-size-of-split-screen
                                        #   -emacs-windows

#
# 01/21/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
man readline
M-.                                     # readline, yank last arg from last
                                        #  command
C-/                                     # readline/emacs, Undo
C-v TAB                                 # readline/emacs, insert tab
M-y                                     # readline/emacs, yank-pop only works
                                        #  after yank to rotate kill rink
M-*                                     # readline, insert all completions,
                                        #  inline after point
C-]                                     # readline, search for next char in
                                        #  current command
C-x C-v                                 # readline, display current bash version
rlwrap <tool>                           # Avoids ^[[C spew by wrapping tool with
                                        #  readline support
with-readline                           # similar thing as rlwrap?
bind -v                                 # readline, print all readline keywords
bind -p                                 # readline, print all readline bindings
~/.inputrc                              # readline, powerful for vi users
    set show-mode-in-prompt on          #  to show their mode from cmd line
    set vi-cmd-mode-string "cmd:"
    set vi-ins-mode-string "ins:"

#
# 01/22/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
rdiff-backup                            # like rsync, remote incremental backup
Org-Journal / diary-mode / org-capture
https://i.redd.it/vx93yzzvcub41.png
https://www.reddit.com/r/emacs/comments/er6dq7/my_gtd_workflow_with_emacsorgmode/
https://www.reddit.com/r/emacs/comments/527jg8/what_is_the_difference_between_diary_mode_and/
https://www.reddit.com/r/emacs/comments/erhb05/how_to_start_with_emacs_org_mode/

#
# 01/23/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
align-regexp                            # emacs, align region on character

#
# 01/25/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
awk '!visited[$0]++' big_filename       # faster than sort | uniq

#
# 02/08/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
pr                                      # pager, mentioned in `diff -l` manpage
diff -y -W 200 s0 s1 | colordiff | less -iFXR
                                        # correct colorizing of diff, better than
                                        #  diff --color=always which doesn't
                                        #  colorize lines that differ only adds/
                                        #  subtractions

#
# 02/20/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
C-y C-xC-x                              # Emacs, re-highlight pasted text
                                        #  useful for formatting pasted text

#
# 03/19/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
git clean -nd                           # Remove untracked files/dirs

#
# 08/27/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
Function split line by char. Preferably built-in but could roll my own
shell-command-on-region "tr | '\n'" should work on linux, but Windows doesn't have short cmds

#
# 08/27/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
lmlsm                                   # Windbg, list alphabetically mods w/syms

#
# 09/03/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
ar tv libmyarchive.a                    # Lists all files in archive with modes
                                        #  and all other file info
ar crv

# 09/07/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
perf/perf-stat/perf-report              # Linux-tools for perf tracking
cpupower                                # I think perf-tools? Godbolt used
g++ -0s empty.cpp -o <file.o>
objdump --no-show-raw-insn -dC <file.o> # Don't look at bytecodes
readelf -a <file.o>                     # Dump everything in the executable
sudo perf record <exe cmd str>          # Records data to ./perf.data
sudo perf report                        # Reads and displays perf data, can tab
                                        #  thru hottest instructions
locale -a                               # Print all supported locales
locale                                  # Print all locale data set in shell
LC_NUMERIC=C locale -c LC_NUMERIC       # Print the numeric formats for 'C'
LC_NUMERIC=en_US.UTF-8 locale -c LC_NUMERIC
                                        #  en_us.UTF-8 has a comma thousands sep
                                        #  whereas C does not
LC_NUMERIC=en_US.UTF-8 sudo perf stat -B -o perf.stat_15sum ./15sum
                                        # Get thousands seperators in perf track

#
# 11/13/2020
#
Command                                      Comments
------------------------------------------------------------------------------------------
[[][^]]*] -> ""                              # Emacs regex, Deletes bracket groups [..]
                                             #  query-replace-regexp == ESC-CTRL-SHIFT-5

#
# 11/27/2020
#
Command                                      Comments
------------------------------------------------------------------------------------------
git diff --staged --ignore-cr-at-eol emacs   # Ignores ^M from win/linux diffs
dos2unix filename                            # Git bash, remove DOS endings, ^M, in-place

#
# 12/26/2020
#
Command                                 Comments
---------------------------------------------------------------------------------
C-M-backspace                           # Emacs, highlight cur c++ function
                                        #  Repeat: expand region by 1 function
https://stackoverflow.com/users/640243/davidn
                                        # David Neiss on StackOverflow
<build>/CMakeFiles/<target>.dir         # CMake, linker command file

#
# 01/21/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
package-menu-filter                     # emacs, in package-list-packages this
                                        #  filters the list down to packages that
                                        #  match the search string
f                                       # emacs, in package-list-packages
                                        #  activates package-menu-filter
h                                       # emacs, in package-list-packages lists
                                        #  help message with commands that can
                                        #  be run
https://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Menu.html
i                                       # emacs, in package-list-packages marks
                                        #  for install
x                                       # emacs, in package-list-packages execs
                                        #  all installs
https://stackoverflow.com/questions/4659549/maintain-git-repo-inside-another-git-repo

#
# 04/26/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
$(npm bin)/http-server                  # Run node server for
/home/diego/sw/homeauto/data_vis_pi/nodeserver

#
# 07/10/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
-z "${return_type##*vector<vector*}"    # platform-independent(?) check existence
-z "${var_name##*STRING*}"              #  of substring STRING (i.e. contains())

#
# 07/12/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
${path^}                                # Uppercase first letter
${path^^}                               # Uppercase entire variable
${path,}                                # Lowercase first letter
${path,,}                               # Lowercase entire variable

#
# 07/18/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
tail -n +2                              # Print all except *first* line

#
# 08/26/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
check-parens                            # Emacs, figures out where missing parens
                                        #  is. Also bisect init file to find
                                        #  errors if something like this is
                                        #  causing a "eof during parsing" error

#
# 10/03/2021
#
Command                                 Comments
---------------------------------------------------------------------------------
echo {-300..0..1} | tr ' ' ','          # Generate CSV sequence of numbers

#
# 11/23/2021
#
Command                                      Comments
---------------------------------------------------------------------------------
TODO: hyphenate everything in a man cmd      # readline wishlist
 go from $ git show| to $ man git-show|

#
# 11/30/2021
#
Command                                      Comments
---------------------------------------------------------------------------------
TODO: Emacs command invoked from within the ()'s of a multi-line query,
 highlights query,
 removes all spaces and sends to clipboard
 shell-command-on-region "tr -d ' ' | tr -d '\n' | pbcopy"

#
# 12/03/2021
#
Command                                      Comments
---------------------------------------------------------------------------------
Command-k                                    # Github, open cmd window, like cmd-space

#
# 12/07/2021
#
Command                                      Comments
---------------------------------------------------------------------------------
sed '<line_no>!d'                            # Sed, print only line_no
awk -F'-' '{a[$1]+=$2;}END{for(i in a)print i","a[i];}' # Awk, group by
echo "scale=2;100*{}/23831994" | bc          # Bash calc, precision to 2 decimal pts

#
# 12/21/2021
#
Command                                      Comments
---------------------------------------------------------------------------------
networksetup -connectpppoeservice "VPN"      # Mac, Connect to VPN from Terminal

#
# 12/22/2021
#
Command                                      Comments
---------------------------------------------------------------------------------
uuidgen                                      # Generate uuid from cmd line
security add-generic-password help           # keychain help
security add-generic-password \
 -a "${USER}" -l "<LABEL>"    \
 -D "<LABEL>" -w "<PASSWORD>" \
 -s "<UUID>" -T "/usr/bin/security"          # OSK Keychain, Add password
read -s -p "Enter pw:" pass && \
security add-generic-password  \
 -a "${USER}" -l "<LABEL>"     \
 -D "<LABEL>" -w "${pass}"     \
 -s "<UUID>" -T "/usr/bin/security"; \
 unset pass; echo                            # Keep pw out of bash history
security find-generic-password \
 -s "<UUID>" -w                              # OSX Keychain, Print Password to stdout
security remove-generic-password \
 -s "<UUID>"                                 # Keychain, Remove password
                                             # Helpful: https://4ndrs.xyz
                                             #           /posts
                                             #           /macos-vpn-command-line

  100* [2021-12-22 10:10:01] ls              # History, the asterisk means the line
                                             #  was modified. "mark-modified-lines"
help help                                    # `help` shows relevant Bash Manual
                                             #  section for builtins
help history
help set

#
# 12/28/2021
#
Command                                      Comments
------------------------------------------------------------------------------------------
reptyr                                       # Move active terminal session to GNU Screen

# 12/29/2021
#
Command                                      Comments
------------------------------------------------------------------------------------------
https://gitlab.kitware.com/cmake
  /community/-/wikis/doc/tutorials
  /How-To-Write-Platform-Checks              # CMake, platform detection

#
# 02/01/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
set filename-display basename                # GDB, default 'relative'
set print frame-arguments none               # GDB, default 'scalar'

#
# 02/10/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
fuser -v <file>                              # Show pids using a file
fuser -k <file>                              # Kill processes using a file
C-x a                                        # gdb, toggle TUI mode
info locals                                  # gdb, show local vars
info break                                   # gdb, show bps
info threads                                 # gdb, show threads
entr                                         # http://eradman.com/entrproject/

# 02/28/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
ulimit -a                                    # Show all resource limits
help ulimit
man core
/proc/sys/kernel/core_pattern                # Sets policy for core dump names
ulimit -c unlimited                          # Anything besides 0 allows core dumps

#
# 03/02/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
cmd+opt+i                                    # Mac, shortcut for dev tools
cmd+shift+4 space click                      # Mac, screenshot of any window
opt+up/down                                  # Google Sheets, navigate tabs
git merge --squash                           # Git, squash merge! One command.

#
# 03/07/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
xcode-select --install                       # Mac, install Git via Dev Tools

#
# 03/15/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
sed "s/'//g"                                 # Remove single quote from input
tr -d ',"'                                   # Removes multiple chars from input

#
# 03/18/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
dot -T?
dot -Tjpeg -oincgraph.jpg incgraph.txt       # Generate c++ include graph

#
# 03/20/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
CMAKE_EXE_LINKER_FLAGS                       # CMake, linker flags, for like -v debug

#
# 03/21/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
untar <archive> -C <out-dir>                 # tar, untar to named dir

#
# 03/22/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
p <varname>                                  # gdb, print
f <frameNum>                                 # gdb, jump to frame in bt
bt <numFramesToShow>                         # gdb, show fewer number of frames
p (<type>)* <addr>)._metadata.options        # gdb, cast to ptr, deref ptrs
info frame => i f                            # gdb, print info on current frame
info args => i ar                            # gdb, print args to current function
p ((CollectionImpl)* 0x559f51afb990)._metadata.get().options

#
# 03/25/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
hexdump -C <file>                            # Print hex + ASCII

#
# 03/28/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
echo "/a/file.js | awk -F'/' '{print $NF}'   # Get last field (cut can't do this)
cat -e file.txt                              # Print '$' for each newline
-n $(tail -c 1 <file>)                       # Does a file end with newline

#
# 03/29/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
dirs                                         # Print pushd/popd dir stack
cmd+shift+e                                  # VSCode for Mac, go to explorer
cmd+shift+f                                  # VSCode for mac, go to finder
cmd+p                                        # VSCode for mac, pop everything search box
echo "key:[1823rf2]" | tr 'a-z0-9' 'x'       # censor a string

# 04/08/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
|-<tab>                                      # Emacs Org-Mode, Table-Mode
|                                            # Any line beginning with this is part of
                                             #  the table
M-up/down                                    # Emacs Org-Mode, Table-Mode, move cur
                                             #  row up/down
M-right/left                                 # Emacs Org-Mode, Table-Mode, move cur
                                             #  col right/left
C-c -                                        # Insert row beneath cur line
C-c <ENTER>                                  # Insert row beneath cur line, move pt
C-c ^                                        # Sort rows in region

#
# 04/11/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
stat -x <dir/file>                           # Mac, display verbose dir/file time stats

#
# 04/18/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
http://www.catb.org/jargon/html/

#
# 04/21/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
vc-annotate                                  # Emacs, git blame

#
# 04/25/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
dircolors --print-database > ~/.dircolors    # Modify Colors in terminal

#
# 04/26/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
cmd-shift-p                                  # VSCode, open command panel (search for
                                             #  commands or actions)
cmd-b                                        # VSCode, toggle file browser
sudo add-apt-repository ppa:kelleyk/emacs
sudo apt-get install emacs27                 # Get latest stable emacs on Ubuntu 18.04

#
# 04/27/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
security find-generic-password -s '' -w | sudo -k -S -p '' ls
                                             # Run sudo without pw prompt
update-alternatives --get-selections         # Dump all configured alternatives

#
# 05/05/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
clang-check -ast-dump-filter="ClassName" -ast-print -p . src/header.h
                                             # Print all functions of "ClassName" in file
clang-check -ast-list -p . src/header.h | grep "ClassName"
                                             # Print raw symbols of "ClassName" in file
clang-check -ast-dump-filter="ClassName" -ast-dump -p . src/header.h

#
# 05/09/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
pkgutil --pkg-info=com.apple.pkg.CLTools_Executables # Xcode cmd line tools, version info

#
# 05/11/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
M-$                                          # Emacs, check spelling of current word
C-h b                                        # Emacs, what does the current mode do

#
# 05/20/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
TODO: Add an env variable that cpptype and similar commands pipe into so you can reference
 $PRIFILE or something in nxt command

#
# 05/23/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
C-c C-x M                                    # Org-mode, insert TODO on next line

#
# 05/31/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
cppfilt                                      # Rust implementation of cpp demangler

#
# 06/03/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
install-all                                  # everything
install-core                                 # mongod, mongos
install-devcore                              # mongo, mongod, mongos
install-mongod                               # mongod
install-mongos                               # mongos
install-mongo                                # mongo

#
# 06/09/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
cua-selection-mode                           # Emacs, advanced rectangle commands
cua-set-rectangle-mark (M-n for numbering)   # Emacs, insert numbers to region
artist-mode                                  # Emacs, draw lines
C-c C-a p RET                                # Emacs, draw line in artist-mode
git blame -L<line>,+10 <file>                # No need to specify end line number

#
# 06/10/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
TODO: emacs function to wrap current text with #include ""
head -c -1 <file>                            # Remove final byte (i.e. newline) from file

#
# 06/23/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
gcfu | tr '[:upper:]' '[:lower:]' | sed 's/ /./g' # TODO: Git checkout completion

#
# 06/27/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
man terminfo                                 # Less, colors
man termcap                                  # Less, colors

#
# 06/29/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
git branch --contains <SHA>                  # Git, which branches contain commit
git branch -a --contains <SHA>               # All branches incl remote contain commit
git show --stat-name-width=<count>           # Git, increase width used for filenames
git show HEAD -- */*/*.js                    $ Git, show all JS files in commit
git checkout --  */*/*.js                    $ Git, discard all JS file changes

#
# 07/03/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
xterm-mouse-mode                             # Emacs, allow mouse use within buffers

#
# 07/06/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
C-h k                                        # Emacs, helpful key - more info than you
                                             #  ever need about a key combo
C-h v                                        # Emacs, helpful variable - info on an elisp
                                             #  variable
C-h c                                        # Emacs, describe-key-briefly - only in
                                             #  minibuffer, doesn't open window
C-h r                                        # Emacs, info-emacs-manual, top-level help
M-x shortdoc-display-group                   # Emacs 28, cheat sheet
.cache                                       # clangd, stores its config here in prj root
(lsp-workspace-root)                         # Emacs/lsp, reports root of project
(lsp-workspace-folders-add ...)              # Emacs/lsp, add more dirs to project
                                             #  caution: (haven't used)
delete-selection-mode                        # Emacs, minor-mode, behavior you expect in
                                             #  text editor, overwrite selection/region
./,                                          # JIRA, opens command window on an issue

#
# 07/07/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
sudo timedatectl set-timezone America/Los_Angeles # Set timezone
M-r                                          # Emacs, jump cursor to middle/top/bottom
M-l/M-c/M-u                                  # Emacs, lowercase/cap/uppercase prev word
git commit --allow-empty -m "Empty Commit"   # Git, make an empty commit

#
# 07/08/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
                                             # Configure clangd w/Emacs
https://github.com/clangd/clangd/releases/   #  1. Download latest clangd from binaries
                                             #  2. Unzip & install with update-a12s
sudo update-alternatives --install /usr/bin/clangd clangd /usr/local/bin/clangd-14 100
(use-package lsp-mode                        #  3. Use package in Emacs
  :hook (
        (c++-mode . lsp-deferred)
	(lsp-mode . lsp-enable-which-key-integration))
  :commands (lsp lsp-deferred))
(use-package lsp-ui)
                                             #  4. Configure exe location
(setq lsp-clangd-binary-path "/usr/bin/clangd")
                                             #  5. Customize clangd args
(setq lsp-clients-clangd-args "--header-insertion=iwyu")
                                             #  6. Add a .clangd for system headers

ansi-term                                    # Emacs, shell with colors

#
# 07/11/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
cat <(echo "{") <(grep -o "\"Result\".*$" raii_test.log | cut -d',' -f2-) | jq
                                             # MongoDB, Parse failed C++ unit test logs
iconv -t UTF8 cellar.csv > cellar_utf8.csv   # Import csv's into mongo
mongoimport --uri "mongodb://importer:password@localhost:27017" \
 --db="wine" --file=cellar_utf8.csv --type=csv --headerline
mlaunch init --single --dir ~/data/db/wine0

#
# 07/13/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
clang-tidy <file> --export-fixes=fixes.yaml  # Run clang-tidy
grep cppcoreguidelines fixes.yaml | cut -d':' -f2- | tr -s ' ' | cut -d' ' -f2- | sus
                                             # Frequency of error types in clang-tidy

#
# 07/18/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
mkvirtualenv <envname>                       # Useful wrapper around python venv mgmt
lsvirtualenv

#
# 07/21/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
diff -y --suppress-common-lines <f1> <f2> | wc -l # Diff, number of lines different
iwyu_tool.py -v -p . <file.cpp> -- --no_fwd_decls --max_line_length 120 &> fixes
fix_includes.py -p $(pwd) --nocomments <file.cpp> < fixes

#
# 08/19/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
./mytestcmd > $(nf testfile)                 # My bash function, nf (next_file) that
                                             #  returns next "testfileX" for output

#
# 08/29/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
git remote set-url --push origin no-pushing  # Git, Make <origin> remote fetch-only

#
# 09/08/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
tail -F <file>                               # --follow --retry, if file doesn't exist,
                                             #  quietly retries until it does exist
thread apply all bt 5                        # gdb, print top 5 stack traces of all
                                             #  threads. Makes it easy to search and find
                                             #  right thread

#
# 09/28/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
git checkout @{-1}                           # Alias for `git checkout -`, other numbers
                                             #  can be provided too

#
# 10/04/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
stow --dotfiles                              # For naming dotfiles like dot-bashrc
man 3 glob                                   # Shell globbing behavior
globstar                                     # Off by default, allows ** in globs like **/
nullglob                                     # Off by default, replaces a failed glob with
                                             #  literally nothing: $ ls ./myfile.* -> $ ls
failglob                                     # Off by default, returns a fail code

#
# 10/09/2022
#
Command                                 Comments
---------------------------------------------------------------------------------
man intro                               # Intro to the shell and its basics!

#
# 10/10/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
( exit 8 )                                   # Like false(1) but can return any exit code
                                             #  in the range 0-9
true / :                                     # Bash, no-op, return success (0)
! : / false                                  # Bash, no-op, return failure (1)
getconf LONG_BIT                             # Returns CPU bits (32 or 64)
uname -m                                     # Similar to above but with arch characters

#
# 10/14/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
systemctl get-default                        # Display current running level
systemctl start/stop/restart <n>.service     # Operate on a systemd service
https://manpages.ubuntu.com/manpages/bionic/man5/systemd.unit.5.html
https://manpages.ubuntu.com/manpages/bionic/man5/systemd.service.5.html

#
# 10/19/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
mlaunch init --binarypath build/install/bin --replicaset --port 29090 --dir /data/db

#
# 10/21/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
tput rmam                                    # Bash, enter truncate lines mode/nowrap
tput smam                                    # Bash, end truncate lines mode/wrap
less -S                                      # Truncate lines, can also type -S in an
                                             #  active session to toggle behavior.

#
# 10/28/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
info functions <symbol_name>                # gdb, search for symbols

#
# 10/30/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
tar --gname root --uname root <>             # For stripping current user/group in tarball
github.com/charmbracelet/vhs                 # Record terminal, 2 different programs
https://asciinema.org/                       # Record terminal, 2 different programs

#
# 10/31/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
lldb -p <pid>
image lookup -r -s <func>                    # lldb, lookup symbol (gdb's info function <>)
br s -f <file> -l <line>                     # lldb, set bp at line
br s -n <func>                               # lldb, set bp on func
lldb -s <script>                             # lldb, run multiple commands in script
gdb -x <script>                              # gdb, commands in script
br l                                         # lldb, list breakpoints
command source <file>                        # lldb, run commands from file/script
TODO: what is a comment/no-op cmd? Would like to comment lldb scripts
br dis <number>                              # lldb, disable individual breakpoints
br dis *                                     # lldb, disable multiple breakpoints
fr v                                         # lldb, frame view arguments and local vars
                                             #  for current frame. (info args & locals)
fr v -a                                      # lldb, same as above, no args (just locals)

#
# 11/01/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
print()                                      # Legacy mongo
printjson()                                  # Legacy mongo
ps -axo pid,command | grep <exe> | grep -v grep | cut -d' ' -f1 # Find pid of process
info sharedlibrary                           # gdb, print all loaded shared libs

#
# 11/02/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
kill -18 <pid>                               # Bash, SIGTSTP signal is tied to ctrl-z
                                             #  and job control. Sending this to an active
                                             #  process will stop it and keep it within
                                             #  the job control queue.
tput smcup/rmcup                             # Linux, save/restore screen state
                                             #  this is how commands like `less` etc
                                             #  return the command history and screen to
                                             #  the user after opening a file.
                                             #  I have been searching for this behavior
                                             #  for quite some time. Certainly have been
                                             #  pondering it for a few years. Here are
                                             #  some resources:
                                             #  - https://stackoverflow.com/questions/
                                             #     11023929/using-the-alternate-screen
                                             #     -in-a-bash-script
                                             #  - https://invisible-island.net/xterm
                                             #     /xterm.faq.html#xterm_tite
                                             #  - https://stackoverflow.com/questions
                                             #     /33929816/save-and-restore-terminal
                                             #     -content
set auto-solib-add 0                         # gdbinit, speed up load time by not loading
                                             #  the world
sharedlibrary lib<name>.so                   # gdb, load sharedlib to enable setting bp's

#
# 11/03/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
numfmt --from=si 10M                         # convert human-readable to bytes
numfmt --to=si 3498                          # convert bytes to human-readable

#
# 11/06/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
ssh-copy-id user@remote                      # SSH, add public key to remote server to
                                             #  enable passwordless authentication

#
# 11/08/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
show args
set args --flag true -filter false           # gdb, set args for the next "run" invocation
info terminal
info proc                                    # gdb, some envs, will show pid, cwd, etc of
                                             #  the inferior
set print thread-events 1                    # gdb, turn on thread event printing (default)
whatis <var>                                 # gdb, print type of var/expression
catch load <libname-regex>                   # gdb, break on shared lib load, when empty,
                                             #  breaks on all shared lib loads
LD_DEBUG ldd <filename>                      # Insert paths to test loading shared libs
LD_DEBUG=help cat                            # Print LD_DEBUG available values
plt                                          # Definition = procedure definition table

#
# 11/15/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
show values                                  # gdb, value history variables
                                             #  shows all prior expressions in session
checkpoint                                   # gdb, initiate checkpoint where you want to
                                             #  return to
info checkpoints                             # gdb, list checkpoints
restart <checkpoint-id>                      # Returns to execution at checkpoint

#
# 12/02/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
awk -v n=5 '1; NR % n == 0 {print ""}'       # Awk, insert blank line every N lines

#
# 12/20/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
jq -r 'map(select(.file | test("src/mongo/db/storage")))' compile_commands.json
                                             # jq, filter array into smaller array by some
                                             #  test. In this case trim the compile db.

#
# 12/21/2022
#
Command                                      Comments
------------------------------------------------------------------------------------------
/System/Library/PrivateFrameworks/MobileDevice.framework/Versions/Current
 /AppleMobileDeviceHelper.app/Contents/Resources/AppleMobileBackup
 --target <UDID> --backup                    # iOS Backup tool on MacOS
                                             #  Debug output sent to console app.
                                             #  UDID taken from prior successful backup's
                                             #  root dirname.
                                             #  https://developer.apple.com/forums/thread/98066

#
# 01/25/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
-I/opt/compiler-explorer/libs/boost_1_64_0  # CompilerExplorer, get access to boost
                                            #  https://github.com/compiler-explorer
                                            #   /compiler-explorer/issues/490

#
# 02/03/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
db.adminCommand({getParameter: 1, featureCompatibilityVersion: 1}) # mdb, get fcv
db.adminCommand({setFeatureCompatibilityVersion: "6.0"}) # mdb, set fcv
"Election succeeded, assuming primary role"  # mdb, election log line
add-symbol-file libmongod.so                 # gdb, add a single shared library

#
# 02/09/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
ninja -f repro.ninja -j200 build/install/bin/db_repl_test \
      && ./build/install/bin/db_repl_test --suite "OplogEntryTest" &> $(nf oplogtest)
                                             # mdb, compile and run a unit test

#
# 02/25/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
process launch --stop-at-entry -- all -t     # lldb, stop at launch of program

#
# 03/08/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
cut -d, -f2 --complement my.csv > new.csv    # Remove column from CSV file

#
# 03/14/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
db.getMongo().getDBNames().forEach(function(v, i){print(v+'\n\t'+db.getSiblingDB(v).getCollectionNames().join('\n\t'))})
                                             # mongo, show all colls in all dbs (pretty)
db.getMongo().getDBNames().forEach(function(v, i){print(v+'.'+db.getSiblingDB(v).getCollectionNames().join('\n'+v+'.'))})
                                             # mongo, show all colls in all dbs (dotted ns)
db.getMongo().getDBNames().forEach(function(x) {if (['admin', 'config', 'local'].indexOf(x) < 0) { db.getSiblingDB(x).dropDatabase();}})
                                             # mongo, drop all user dbs

#
# 03/15/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
ls -ld */                                    # ls, list dirs only

#
# 03/17/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
body 3492 3492 db_catalog_test.out | jq '.attr.bt.backtrace[].s' | tr -d '"' | cppfilt
                                             # mdb, stacktrace from unit test crashes
sed -n '/.*invariantFailed.*/,$p' <file>     # print everything including match and after

#
# 03/21/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
fuser -k 8080/tcp                            # Kill process listening to port 8080
fuser -k $(seq -s'/tcp ' 32030 32033)/tcp    # Kill processes on range of contiguous ports

#
# 03/23/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
git rev-parse --abbrev-ref @{-1}             # git, print branch `git checkout -` will use
git rev-parse --abbrev-ref @{-2}             # git, print prior prior checked out branch
git reflog | grep -i "checkout: moving" \    # git, last 10 branches, numbered
 | cut -d' ' -f6 | head | nl                 #  number lines of output
git checkout @{-1}                           # synonymous with `git checkout -`

#
# 03/24/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
nginx -s reload                              # nginx, pickup config changes

#
# 03/28/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
funcu _git_branch_delete \
 | source-highlight -s bash -f esc256        # Highlight bash in the terminal

#
# 04/10/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
rsync --remove-source-files --exclude=data ./* ./dest/ # Use rsync to move files
checkpointer thread                          # mdb, src/mongo/db/storage/checkpointer.h

#
# 04/11/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
WT has no notion of if a collection is replicated, only logged/not logged

#
# 04/13/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
noatime                                      # Linux, mount filesystem option to not write
                                             #  access times on reads. Can save SSD writes
                                             #  for longevity and perf reasons.

#
# 04/24/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
git commit --amend --reset-author            # Reset author & timestamp/date on commit

#
# 04/30/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
paste -d' ' <(cut -d' ' -f1-7 <file>) <(cut -d' ' -f8 <file> | xargs -I% date -d"@%") <(cut -d' ' -f9- <file>)
                                             # Convert unix time to datetime in one column

#
# 05/04/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
nl -b a                                      # Number all lines (including blanks)
nl -v <num>                                  # Begin number on line <num>

#
# 05/15/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
echo $((base#number))                        # Convert hex to dec
echo $((16#1A))

#
# 05/26/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
C-x C-q C-x C-s C-x C-q                      # Emacs, Don't run save hooks
                                             #  read-only-mode, save, read-only-mode off

#
# 06/07/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
addr2line -e <exec> symbol+2A                # Get file and line of symbol

#
# 06/09/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
git format-patch -1 <SHA>                    # Git, create patch from commit

#
# 06/14/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
git checkout <old_commit> -- <file>          # Git, undoes all changes in file since SHA

#
# 06/27/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
https://api.github.com/users/USERNAME        # created_at -> how old github handle is

#
# 07/11/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
shasum -c <checkfile> -a 256 <tarball>       # Check checksum
lsof -p <PID>                                # List files opened by PID
tail -c +0 -f /proc/<PID>/fd/2 > /tmp/recover# Copy deleted but opened file to filesystem
https://github.com/<>/<>/commits/<branch>?author=<>
                                             # Github, see all commits from one author

#
# 07/27/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
d                                            # Linux Perf (1), filter down to dso (.so)
t                                            # Linux Perf (1), filter down to thread
F                                            # Linux Perf (1), re-compute percentages

#
# 07/28/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
jq -r                                        # Remove double-quotes from jq output

#
# 08/02/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
F                                            # Less, make `less` behave like tail -f

#
# 08/10/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
gcc -E -march=help -xc /dev/null             # Supported CPU architectures by gcc

#
# 08/15/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
dig +short <hostname>                        # Do IP DNS lookup of hostname

#
# 08/16/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
USE_SCHEDULER=<host> ICECC_DEBUG=debug icemon # Ice cream, how to monitor

#
# 08/22/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
pkgutil --pkg-info=com.apple.pkg.CLTools_Executables # XCode cmdline tools version
pkgutil --pkgs | grep -i tools               # Helps locate the pkg name for prior cmd

#
# 08/24/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
screen -S <name> -X sessionname <new_name>   # Screen, rename an existing session

#
# 08/25/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
sudo sysctl vm.overcommit_memory=2           # Set limits on linux to prevent OOM

#
# 09/07/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
sudo swapon -a
sudo swapoff -a                              # Flush swap memory
gold --stats --trace --verbose               # linker options for debugging
gold --no-map-whole-file --no-keep-memory --no-keep-files-mapped # linker, low memory
sudo dphys-swapfile swapoff                  # Change swap size procedure:
<edit /etc/dphys-swapfile CONF_SWAPSIZE      # Set swap size in MBs
<edit /etc/dphys-swapfile CONF_MAXSWAP       # Set swap size in MBs
sudo dphys-swapfile setup
sudo dphys-swapfile swapon                   # last step in swap size change procedure

#
# 09/18/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
otool -L <binary>                            # Mac equivalent of ldd
C-x C-q C-x C-s C-x C-q                      # Write a file without save hooks running

#
# 10/19/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
until <line_num>                             # gdb, execute until this line is reached

#
# 10/24/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
jq -c '.attr'                                # jq, output object without newlines

#
# 10/25/2023
#
Command                                      Comments
------------------------------------------------------------------------------------------
alignas(4096) char zeros[1024*1024*1024];    # Pre-allocate 1GB of zeros. Stored as 1 page
                                             # of physical memory on Linux via .bss as a
                                             # range of bytes. Don't write to it, nor
                                             # declare it const.
